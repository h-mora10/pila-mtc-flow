OperadorServicio ServiceOperator {
	Atributo Texto "nombre" DisplayName="Nombre";				
	SuperEntidad Aportante {
		Atributo Texto "nombre" DisplayName="Nombre";
		Atributo Enum "tipoPagadorPensiones" DisplayName="Tipo de pagador" [1, 2, 3, 4];
		Entidad Pensionado {				 					
			Atributo Texto "nombre" DisplayName="Nombre";
			Atributo Entero "edad" DisplayName="Edad";
			Atributo Entero "salario" DisplayName="Salario";
							
			Atributo Complejo "novedad" DisplayName="Novedad" {
				Atributo Date "fechaInicio" DisplayName="Fecha de inicio";			
				Atributo Date "fechaFin" DisplayName="Fecha de finalización";			
				Atributo Entero "duracion" DisplayName="Duracion";					
				Atributo Enum "tipoNovedad" DisplayName="Tipo" [1, 2, 3, 4, 5, 6, 7, 8]
			};
			
			Atributo Enum "tipoPensionado" DisplayName="Tipo de pensionado" [1, 2, 3, 4, 5, 6, 7, 8, 9];
			Atributo Enum "tipoPension" DisplayName="Tipo de pensión" [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21];
			Atributo Booleano "esAltoRiesgo" DisplayName="¿Es de alto riesgo?";	
			Atributo Booleano "esCongresista" DisplayName="¿Es congresista?";
			Atributo Booleano "esTrabajadorCTI" DisplayName="¿Es trabajador del CTI?";
			Atributo Booleano "esAviador" DisplayName="¿Es aviador?";
			Atributo Booleano "residenciaEnExterior" DisplayName="Residencia en el exterior";
			Atributo Texto "tienGrupoFamiliarColombia" DisplayName="¿Tiene grupo familiar en Colombia?";
			Atributo Enum "codigoCIU" DisplayName="Codigo CIU" [8022, 8513, 0117, 1541, 1592, 1743, 2101, 2322, 1431, 2321]
		};

		Pagos Pago {
			Atributo Real "valorSalud" DisplayName="Total salud";
			Atributo Real "valorPension" DisplayName="Total pensión";
			Atributo Real "valorRiesgos" DisplayName="Total riesgos";
			Atributo Real "valorTotal" DisplayName="Total"				
		}				
	};	

	Servicio Service {	
		Atributo Texto "nombre" DisplayName="Nombre";	
		Calculo AportePensiones {		
			var ultimaNovedad = -Null-;
				
			if novedades.size > 0{
				var ultimaNovedad = novedades.ultimo;
			}
			
			if novedades.size == 0{
				retorne Pensionado.salario * 0.16;
			} 
			else_if ultimaNovedad == -NotNull- AND (ultimaNovedad.tipo == SuspensionTemporal OR ultimaNovedad.tipo == LicenciaNoRemunerada OR ultimaNovedad.tipo == ComisionServicios){														
				if 	ultimaNovedad.duracion > 7{
					retorne Pensionado.salario * 0.16;
				}
				else_if ultimaNovedad.duracion > 3 AND ultimaNovedad.duracion <= 7{
					retorne Pensionado.salario * 0.12;
				}
				else_if ultimaNovedad.duracion >= 0 AND ultimaNovedad.duracion <= 3{
					retorne 0;
				}
			}	
			else_if Pensionado.esAltoRiesgo == true{
				retorne Pensionado.salario * 0.26;
			} 			
			else_if Pensionado.esCongresista == true{																			
				retorne Pensionado.salario * 0.255;					
			}
			else_if Pensionado.esTrabajadorCTI == true{																			
				retorne Pensionado.salario * 0.35;					
			}
			else_if Pensionado.esAviador == true{																			
				retorne Pensionado.salario * 0.21;					
			}
			
		};
		Calculo AporteSeguridadSocialEnSalud {		
			var ultimaNovedad = -Null-;
			
			if novedades.size > 0{
				var ultimaNovedad = novedades.ultimo;
			}
			
			if Pensionado.residenciaEnExterior == true AND Pensionado.tienGrupoFamiliarColombia == true {
				retorne 0;	
			}				
			else_if novedades.size == 0{
				retorne Pensionado.salario * 0.12;	
			}				
			else {
				if ultimaNovedad == -NotNull- AND (ultimaNovedad.tipo == SuspensionTemporal OR ultimaNovedad.tipo == LicenciaNoRemunerada OR ultimaNovedad.tipo == ComisionServicios) {
					
					if ultimaNovedad.duracion >= 0 AND ultimaNovedad.duracion <= 3 {
						retorne 0;	
					}
					
					else_if ultimaNovedad.duracion > 3 AND ultimaNovedad.duracion <= 7{
						retorne Pensionado.salario * 0.12;	
					}
					
					else_if ultimaNovedad.duracion > 7{
						retorne Pensionado.salario * 0.16;	
					}
				}
			}

		};
		Calculo AporteRiesgosLaborales {		
			
			if Pensionado.codigoCIU >= 8022 AND Pensionado.codigoCIU <= 8513{
			
				retorne Pensionado.salario * 0.00522;	
			}
			
			if Pensionado.codigoCIU >= 0117 AND Pensionado.codigoCIU <= 1541{
			
				retorne Pensionado.salario * 0.01044;	
			}
			
			if Pensionado.codigoCIU >= 1592 AND Pensionado.codigoCIU <= 1743{
			
				retorne Pensionado.salario * 0.02436;	
			}
			
			if Pensionado.codigoCIU >= 2101 AND Pensionado.codigoCIU <= 2322{
			
				retorne Pensionado.salario * 0.04350;	
			}
			
			if Pensionado.codigoCIU >= 1431 AND Pensionado.codigoCIU <= 2321{
			
				retorne Pensionado.salario * 0.06960;						
			}
		}
	}
}